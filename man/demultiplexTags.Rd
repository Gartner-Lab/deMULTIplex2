% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classify.R
\name{demultiplexTags}
\alias{demultiplexTags}
\title{Demultiplex tag count matrix}
\usage{
demultiplexTags(
  tag_mtx,
  init.cos.cut = 0.5,
  max.iter = 30,
  converge.threshold = 0.001,
  prob.cut = 0.5,
  min.cell.fit = 10,
  max.cell.fit = 10000,
  min.quantile.fit = 0.05,
  max.quantile.fit = 0.95,
  residual.type = c("rqr", "pearson"),
  plot.umap = c("residual", "umi", "none"),
  plot.diagnostics = F,
  plot.path = getwd(),
  plot.name = "",
  umap.nn = 30L,
  seed = 1,
  point.size = 1,
  label.size = 3,
  min.tag.show = 50
)
}
\arguments{
\item{tag_mtx}{(required) The tag UMI count matrix with each row representing a cell and each column representing a tag. Pre-filtering to remove empty droplets are recommended.}

\item{init.cos.cut}{Cosine cutoff to initialize the EM algorithm. If input is a single value, same cosine cutoff will be applied to all tags (recommended).
If input is a vector, must be the same length as the number of tags. EM will be initialized with the specified cosine cutoff for each tag.}

\item{max.iter}{Maximum number of EM iterations. For most datasets the default value should suffice.}

\item{converge.threshold}{If consecutive absolute difference in the expected value of the log likelihood (Q function) is below this value, the algorithm is fully converged.
In practice, parameter estimation will stabilize in a few iterations even with down-sampled cells, so Q difference not reaching this threshold is generally fine.}

\item{prob.cut}{Cutoff of posterior probability to determine if a cell is positive or negative with each tag. Default value (0.5) is recommended.}

\item{min.cell.fit}{If a tag has too few positive cells, a GLM model cannot be robustly fit.
Therefore, tags with positive cells less than this specified amount will not be processed.}

\item{max.cell.fit}{Robust estimation of GLM generally does not require using all cells. For large datasets,
deMULTIplex2 downsample the positive cells and negative cells to the amount specified by this parameter to speed up processing.}

\item{min.quantile.fit}{If a cell has total tag count below this quantile, it will be excluded from fitting for robustness.}

\item{max.quantile.fit}{If a cell has total tag count above this quantile, it will be excluded from fitting for robustness.}

\item{residual.type}{Report which type of residual and use which residual for computing UMAP. "\code{rqr}": Randomized Quantile Residual. "\code{pearson}": Pearson residual.}

\item{plot.umap}{Compute and plot UMAP with residual ("\code{residual}"), raw umi count ("\code{umi}") or do not output UMAP summary plots ("\code{none}").}

\item{plot.diagnostics}{Whether to plot diagnostic plots.}

\item{plot.path}{Path to output the plots.}

\item{plot.name}{Text string to append to the output file name.}

\item{umap.nn}{corresponds to the \code{n_neighbors} parameter in the \code{umap} function in the \code{uwot} package.}

\item{seed}{Random seed for reproducibility.}

\item{point.size}{Size of point in the summary and diagnostic plots.}

\item{label.size}{Label size in the summary plot.}

\item{min.tag.show}{Tags with positive cells below this threshold will not be labeled on the summary plot.}
}
\value{
A list containing the assignment results.
\code{final_assign} is the final assignment in a single character vector.
\code{assign_table} stores the detailed assignment result, including the assigned tag for singlets, the total positive tag count of each cell,
and whether a cell is a singlet, a multiplet or is not tagged.
\code{umap} is the umap coordinates.
\code{res_mtx} is the residual matrix.
\code{prob_mtx} is the posterior probability of each cell being positively tagged by each tag.
\code{coefs} is the parameter estimates of the GLM models.
\code{df_list} is a list of data frames for each tag containing stats from the final iteration of EM.
}
\description{
Demultiplex tag count matrix to assign each cell the most probable sample identity using the deMULTIplex2 algorithm.
deMULTIplex2 is built on a statistical model of tag read counts derived from the physical mechanism of tag cross-contamination.
It uses generalized linear models and expectation-maximization to probabilistically infer the sample identity of each cell.
}
\examples{
res <- demultiplexTags(tag_mtx,
                       plot.path = "~/",
                       plot.name = "test",
                       plot.diagnostics = FALSE)
table(res$final_assign)

}
\references{
Qin, Z., Danny, N. C., & Zev Jordan, G. (2023). Demultiplex2: robust sample demultiplexing for scRNA-seq. bioRxiv, 2023.04.11.536275.
}
